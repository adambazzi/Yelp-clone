{"ast":null,"code":"var _jsxFileName = \"/Users/adambazzi/Desktop/Yelp-clone/react-app/src/components/OpenModalDiv/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useModal } from '../../context/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OpenModalItem(_ref) {\n  _s();\n  let {\n    modalComponent,\n    // component to render inside the modal\n    itemText,\n    // text of the button that opens the modal\n    className,\n    onItemClick,\n    // optional: callback function that will be called once the button that opens the modal is clicked\n    onModalClose // optional: callback function that will be called once the modal is closed\n  } = _ref;\n  const {\n    setModalContent,\n    setOnModalClose\n  } = useModal();\n  const onClick = () => {\n    if (onModalClose) setOnModalClose(onModalClose);\n    setModalContent(modalComponent);\n    if (onItemClick) onItemClick();\n  };\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    onClick: onClick,\n    className: className,\n    children: itemText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(OpenModalItem, \"CYHkP+OX4/XADGVYFixIs9jJKu8=\", false, function () {\n  return [useModal];\n});\n_c = OpenModalItem;\nexport default OpenModalItem;\nvar _c;\n$RefreshReg$(_c, \"OpenModalItem\");","map":{"version":3,"names":["React","useModal","OpenModalItem","modalComponent","itemText","className","onItemClick","onModalClose","setModalContent","setOnModalClose","onClick"],"sources":["/Users/adambazzi/Desktop/Yelp-clone/react-app/src/components/OpenModalDiv/index.js"],"sourcesContent":["import React from 'react';\nimport { useModal } from '../../context/Modal';\n\nfunction OpenModalItem({\n  modalComponent, // component to render inside the modal\n  itemText, // text of the button that opens the modal\n  className,\n  onItemClick, // optional: callback function that will be called once the button that opens the modal is clicked\n  onModalClose // optional: callback function that will be called once the modal is closed\n}) {\n  const { setModalContent, setOnModalClose } = useModal();\n\n  const onClick = () => {\n    if (onModalClose) setOnModalClose(onModalClose);\n    setModalContent(modalComponent);\n    if (onItemClick) onItemClick();\n  };\n\n  return (\n    <p onClick={onClick} className={className}>{itemText}</p>\n  );\n}\n\nexport default OpenModalItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,qBAAqB;AAAC;AAE/C,SAASC,aAAa,OAMnB;EAAA;EAAA,IANoB;IACrBC,cAAc;IAAE;IAChBC,QAAQ;IAAE;IACVC,SAAS;IACTC,WAAW;IAAE;IACbC,YAAY,CAAC;EACf,CAAC;EACC,MAAM;IAAEC,eAAe;IAAEC;EAAgB,CAAC,GAAGR,QAAQ,EAAE;EAEvD,MAAMS,OAAO,GAAG,MAAM;IACpB,IAAIH,YAAY,EAAEE,eAAe,CAACF,YAAY,CAAC;IAC/CC,eAAe,CAACL,cAAc,CAAC;IAC/B,IAAIG,WAAW,EAAEA,WAAW,EAAE;EAChC,CAAC;EAED,oBACE;IAAG,OAAO,EAAEI,OAAQ;IAAC,SAAS,EAAEL,SAAU;IAAA,UAAED;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAK;AAE7D;AAAC,GAlBQF,aAAa;EAAA,QAOyBD,QAAQ;AAAA;AAAA,KAP9CC,aAAa;AAoBtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}