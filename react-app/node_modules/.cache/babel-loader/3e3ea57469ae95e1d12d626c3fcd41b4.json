{"ast":null,"code":"export default function filterResults(list, search, query) {\n  let filteredList = list;\n  if (search.length) {\n    filteredList = broadSearch(filteredList, search);\n  }\n  if (query.city.length) {\n    filteredList = queryCity(filteredList, query.city);\n  }\n  if (query.state.length) {\n    filteredList = queryState(filteredList, query.state);\n  }\n  if (query.categories.length) {\n    filteredList = queryCategories(filteredList, query.categories);\n  }\n  if (query.price.length) {\n    filteredList = queryPrice(filteredList, query.price);\n  }\n  if (query.features.length) {\n    filteredList = queryFeatures(filteredList, query.features);\n  }\n  return filteredList;\n}\nfunction queryCity(list, query) {\n  let filteredList = [];\n  let cities = query.split(',');\n  for (let city of cities) {\n    filteredList = [...filteredList, ...list.filter(el => el.city == city)];\n  }\n  return filteredList;\n}\nfunction queryState(list, query) {\n  return list.filter(el => new RegExp(query, 'gi').test(el.state));\n}\nfunction queryCategories(list, query) {\n  // let filteredList = []\n  // let queries = query.split(',')\n  // for(let cat of queries){\n  //     filteredList = [...filteredList,list.filter(el=> scanCategories(cat,el.categories))]\n  // }\n  // return filteredList\n  let filteredList = list;\n  let queries = query.split(',');\n  for (let cat of queries) {\n    filteredList = filteredList.filter(el => scanCategories(cat, el.categories));\n  }\n  return filteredList;\n}\nfunction queryPrice(list, query) {\n  let filteredList = [];\n  let prices = query.split(',');\n  for (let price of prices) {\n    filteredList = [...filteredList, ...list.filter(el => el.price == Number(price))];\n  }\n  return filteredList;\n}\nfunction queryFeatures(list, query) {\n  if (!query) return list;\n  let features = query.split(',');\n  let filteredList = list;\n  for (let feat of features) {\n    filteredList = filteredList.filter(el => new RegExp(feat, 'gi').test(el.features));\n  }\n  return filteredList;\n}\nfunction broadSearch(list, searchTerm) {\n  let filteredList = [];\n  for (let biz of list) {\n    if (new RegExp(searchTerm, 'gi').test(biz.name)) {\n      filteredList.push(biz);\n      continue;\n    }\n    if (new RegExp(searchTerm, 'gi').test(biz.city)) {\n      filteredList.push(biz);\n      continue;\n    }\n    if (new RegExp(searchTerm, 'gi').test(biz.address)) {\n      filteredList.push(biz);\n      continue;\n    }\n    if (biz.categories && scanCategories(searchTerm, biz.categories)) {\n      filteredList.push(biz);\n    }\n  }\n  return filteredList;\n}\nfunction scanCategories(searchTerm, categoriesList) {\n  for (let cat of categoriesList) {\n    if (cat.categoryName && cat.categoryName.toLowerCase() == searchTerm.toLowerCase()) return true;\n  }\n  return false;\n}\nexport function isFiltered(QuObj) {\n  if (QuObj.search.length > 1 || QuObj.query.city.length || QuObj.query.state.length || QuObj.query.price.length || QuObj.query.categories.length || QuObj.query.features.length) return true;\n  return false;\n}","map":{"version":3,"names":["filterResults","list","search","query","filteredList","length","broadSearch","city","queryCity","state","queryState","categories","queryCategories","price","queryPrice","features","queryFeatures","cities","split","filter","el","RegExp","test","queries","cat","scanCategories","prices","Number","feat","searchTerm","biz","name","push","address","categoriesList","categoryName","toLowerCase","isFiltered","QuObj"],"sources":["/Users/adambazzi/Desktop/Yelp-clone/react-app/src/utils/searchAndFilters.js"],"sourcesContent":["export default function filterResults(list,search,query){\n\n    let filteredList = list\n\n    if(search.length){\n        filteredList = broadSearch(filteredList,search)\n    }\n    if(query.city.length){\n        filteredList = queryCity(filteredList,query.city)\n    }\n    if(query.state.length){\n        filteredList = queryState(filteredList,query.state)\n    }\n    if(query.categories.length){\n        filteredList = queryCategories(filteredList,query.categories)\n    }\n    if(query.price.length){\n        filteredList = queryPrice(filteredList,query.price)\n    }\n    if(query.features.length){\n        filteredList = queryFeatures(filteredList,query.features)\n    }\n    return filteredList\n}\n\n\nfunction queryCity(list,query){\n    let filteredList = []\n    let cities = query.split(',')\n    for(let city of cities){\n        filteredList = [...filteredList,...list.filter(el=>el.city == city)]\n    }\n    return filteredList\n}\n\nfunction queryState(list,query){\n    return list.filter(el => new RegExp(query, 'gi').test(el.state))\n}\nfunction queryCategories(list,query){\n    // let filteredList = []\n    // let queries = query.split(',')\n    // for(let cat of queries){\n    //     filteredList = [...filteredList,list.filter(el=> scanCategories(cat,el.categories))]\n    // }\n    // return filteredList\n    let filteredList = list\n    let queries = query.split(',')\n    for(let cat of queries){\n        filteredList = filteredList.filter(el=> scanCategories(cat,el.categories))\n    }\n    return filteredList\n}\nfunction queryPrice(list,query){\n    let filteredList = []\n    let prices = query.split(',')\n    for(let price of prices){\n        filteredList = [...filteredList,...list.filter(el=>el.price == Number(price))]\n    }\n    return filteredList\n}\n\nfunction queryFeatures(list,query){\n    if(!query) return list\n    let features = query.split(',')\n    let filteredList = list\n    for(let feat of features){\n        filteredList = filteredList.filter(el=> new RegExp(feat, 'gi').test(el.features))\n    }\n    return filteredList\n}\n\nfunction broadSearch(list,searchTerm){\n    let filteredList = []\n    for(let biz of list){\n        if (new RegExp(searchTerm, 'gi').test(biz.name)){\n            filteredList.push(biz)\n            continue\n        }\n        if (new RegExp(searchTerm, 'gi').test(biz.city)){\n            filteredList.push(biz)\n            continue\n        }\n        if (new RegExp(searchTerm, 'gi').test(biz.address)){\n            filteredList.push(biz)\n            continue\n        }\n        if(biz.categories && scanCategories(searchTerm,biz.categories)){\n            filteredList.push(biz)\n        }\n    }\n\n    return filteredList\n}\n\nfunction scanCategories(searchTerm,categoriesList){\n    for(let cat of categoriesList){\n        if(cat.categoryName && cat.categoryName.toLowerCase()==searchTerm.toLowerCase()) return true\n    }\n    return false\n}\n\nexport function isFiltered(QuObj){\n    if(QuObj.search.length > 1 ||\n        QuObj.query.city.length ||\n        QuObj.query.state.length ||\n        QuObj.query.price.length ||\n        QuObj.query.categories.length ||\n        QuObj.query.features.length) return true\n    return false\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}