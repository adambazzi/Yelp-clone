{"ast":null,"code":"var _jsxFileName = \"/Users/adambazzi/Desktop/Yelp-clone/react-app/src/components/WriteReview/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postReview } from \"../../store/review\";\nimport { getSingleBusiness } from \"../../store/business\";\nimport DynamicStars from \"./DynamicStars\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WriteReviewForm() {\n  _s();\n  const [review, setReview] = useState('');\n  const [stars, setStars] = useState(0);\n  const [validationErrors, setValidationErrors] = useState({\n    stars: '',\n    review: ''\n  });\n  const history = useHistory();\n  const dispatch = useDispatch();\n  // const userId = useSelector(state => state.session.user?.id);\n  const business = useSelector(state => state.business.business);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch(getSingleBusiness(id));\n  }, [dispatch, id]);\n  const onSubmit = async e => {\n    e.preventDefault();\n    const newReview = {\n      stars,\n      review\n    };\n    const errors = {};\n    if (stars <= 0 || stars > 5) errors.stars = 'Reviews must have 1 to 5 stars';\n    if (!review.length) errors.review = 'Review is required';\n    if (!Object.values(errors).length) {\n      let sendReview = await dispatch(postReview(id, newReview));\n      if (sendReview) {\n        return history.push(`/businesses/${id}`);\n      }\n    } else {\n      setValidationErrors(errors);\n    }\n  };\n  if (!Object.values(business)[0]) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Write a review for \", business.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"write-review-form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(DynamicStars, {\n        class: \"class-dyn\",\n        stars: stars,\n        setStars: setStars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"validationErrors\",\n        children: validationErrors.stars\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"review-text\",\n          type: \"text\",\n          onChange: e => setReview(e.target.value),\n          value: review\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"validationErrors\",\n        children: validationErrors.review\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"default-button rd-bg curs\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(WriteReviewForm, \"jWIEZ2sFrwf1gZpdCv6Fi/xtGn4=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useParams];\n});\n_c = WriteReviewForm;\nexport default WriteReviewForm;\nvar _c;\n$RefreshReg$(_c, \"WriteReviewForm\");","map":{"version":3,"names":["useEffect","useState","useHistory","useParams","useDispatch","useSelector","postReview","getSingleBusiness","DynamicStars","WriteReviewForm","review","setReview","stars","setStars","validationErrors","setValidationErrors","history","dispatch","business","state","id","onSubmit","e","preventDefault","newReview","errors","length","Object","values","sendReview","push","name","target","value"],"sources":["/Users/adambazzi/Desktop/Yelp-clone/react-app/src/components/WriteReview/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postReview } from \"../../store/review\";\nimport { getSingleBusiness } from \"../../store/business\";\nimport DynamicStars from \"./DynamicStars\"\nimport './index.css'\n\nfunction WriteReviewForm() {\n\n    const [review, setReview] = useState('');\n    const [stars, setStars] = useState(0);\n\n    const [validationErrors, setValidationErrors] = useState({\n        stars: '',\n        review: ''\n    })\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n    // const userId = useSelector(state => state.session.user?.id);\n    const business = useSelector(state => state.business.business);\n    const { id } = useParams();\n\n    useEffect(() => {\n        dispatch(getSingleBusiness(id))\n    }, [dispatch, id])\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        const newReview = {\n            stars,\n            review\n        }\n\n        const errors = {};\n\n        if (stars <= 0 || stars > 5) errors.stars = 'Reviews must have 1 to 5 stars';\n        if (!review.length) errors.review = 'Review is required';\n\n\n        if (!Object.values(errors).length) {\n           let sendReview = await dispatch(postReview(id, newReview));\n\n           if (sendReview) {\n            return history.push(`/businesses/${id}`)\n           }\n\n        } else {\n            setValidationErrors(errors);\n        }\n\n    };\n\n    if (!Object.values(business)[0]) return null;\n\n    return (\n        <div className=\"review-form-container\">\n            <h1>Write a review for {business.name}</h1>\n            <form\n            className=\"write-review-form\"\n            onSubmit={onSubmit}\n            >\n                <DynamicStars class=\"class-dyn\" stars={stars} setStars={setStars}/>\n                <span className=\"validationErrors\">{validationErrors.stars}</span>\n                <div>\n                    <textarea id=\"review-text\"\n                    type='text'\n                    onChange={(e) => setReview(e.target.value)}\n                    value={review}\n                    ></textarea>\n                </div>\n                    <span className=\"validationErrors\">{validationErrors.review}</span>\n                <div>\n                    <input className=\"default-button rd-bg curs\" type=\"submit\" />\n                </div>\n            </form>\n        </div>\n    )\n\n}\n\nexport default WriteReviewForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}